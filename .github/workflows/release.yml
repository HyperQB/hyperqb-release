name: Build & Release HyperQB

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-release:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure submodule credentials
        run: |
          git config --global url."https://${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "https://github.com/"

      # Leave AutoHyper out when getting submodules
      - name: Init only needed submodules
        run: |
          git submodule update --init -- HyperRUSTY hyperqb-ui

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Z3 installation
        id: cache-z3
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/lib/libz3*
            /usr/local/include/z3*
            /usr/local/lib/pkgconfig/z3.pc
          key: z3-static-${{ runner.os }}-${{ hashFiles('**/z3-version.txt') }}
          restore-keys: |
            z3-static-${{ runner.os }}-

      - name: Install Z3 (static build)
        if: steps.cache-z3.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/Z3Prover/z3.git z3
          cd z3
          # Pin to a specific commit/tag
          git checkout z3-4.12.4
          echo "z3-4.12.4" > ../z3-version.txt
          python3 scripts/mk_make.py --prefix=/usr/local --staticlib
          cd build
          make -j$(sysctl -n hw.ncpu)
          sudo make install
          cd ../..
          # Verify static library exists
          ls -la /usr/local/lib/libz3.a
          # Remove any dynamic libraries to force static linking
          sudo rm -f /usr/local/lib/libz3.dylib* || true
          ls -la /usr/local/lib/libz3*

      - name: Create Z3 version file (for cache key)
        if: steps.cache-z3.outputs.cache-hit == 'true'
        run: echo "z3-4.12.4" > z3-version.txt

      - name: Set environment for static linking
        run: |
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV
          echo "Z3_SYS_Z3_HEADER=/usr/local/include/z3.h" >> $GITHUB_ENV
          echo "Z3_STATIC=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALL_STATIC=1" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=" >> $GITHUB_ENV

      - name: Build binary (static)
        run: |
          cd HyperRUSTY
          cargo build --release

      - name: Verify static linking
        run: |
          echo "=== Checking for dynamic Z3 dependencies ==="
          if otool -L HyperRUSTY/target/release/HyperRUSTY | grep -v "HyperRUSTY/target/release/HyperRUSTY:" | grep -i z3; then
            echo "ERROR: Binary has Z3 dynamic dependencies:"
            otool -L HyperRUSTY/target/release/HyperRUSTY | grep -i z3
            exit 1
          else
            echo "No Z3 dynamic dependencies found - binary is statically linked"
          fi
          echo "=== Full dependency list ==="
          otool -L HyperRUSTY/target/release/HyperRUSTY

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: Set up Flutter UI
        run: |
          cd hyperqb-ui
          flutter pub get

      - name: Build Flutter macOS app
        run: |
          cd hyperqb-ui
          flutter build macos

      - name: Copy binary to assets
        run: |
          mkdir -p hyperqb-ui/assets/bin/
          cp HyperRUSTY/target/release/HyperRUSTY hyperqb-ui/build/macos/Build/Products/Release/hyperqb.app/Contents/Resources/HyperRUSTY
          chmod +x hyperqb-ui/build/macos/Build/Products/Release/hyperqb.app/Contents/Resources/HyperRUSTY

      - name: Download and install oss-cad-suite
        run: |
          # Download the macOS version of oss-cad-suite
          wget https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2025-08-20/oss-cad-suite-darwin-x64-20250820.tgz
          # Extract it
          tar -xzf oss-cad-suite-darwin-x64-20250820.tgz
          # Clean up the downloaded archive
          rm oss-cad-suite-darwin-x64-20250820.tgz

      - name: Copy oss-cad-suite to app bundle
        run: |
          # Create the directory structure if it doesn't exist
          # Copy the entire oss-cad-suite directory to the app bundle
          cp -r oss-cad-suite hyperqb-ui/build/macos/Build/Products/Release/hyperqb.app/Contents/Resources/

      - name: Copy Installation Guide
        run: cp INSTALL.md hyperqb-ui/build/macos/Build/Products/Release/"MacOS Installation Instructions.txt"

      - name: Zip App Bundle
        run: |
          cd hyperqb-ui/build/macos/Build/Products/Release/
          zip -r HyperQB-macos.zip HyperQB.app "MacOS Installation Instructions.txt"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "HyperQB Release ${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          files: hyperqb-ui/build/macos/Build/Products/Release/HyperQB-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
